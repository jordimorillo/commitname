#!/bin/bash

# Verifica que la variable de entorno OPENAI_API_KEY est√© configurada
if [ -z "$OPENAI_API_KEY" ]; then
    echo "‚ùå ERROR: Debes configurar la variable de entorno OPENAI_API_KEY con tu clave de OpenAI API."
    exit 1
fi

# Verifica que jq est√© instalado
if ! command -v jq &> /dev/null; then
    echo "‚ùå ERROR: jq no est√° instalado. Inst√°lalo con: sudo apt install jq"
    exit 1
fi

# Verifica que el script se ejecuta dentro de un repositorio Git
if [ ! -d ".git" ]; then
    echo "‚ùå ERROR: Este script debe ejecutarse en la ra√≠z de un repositorio Git."
    exit 1
fi

# Obtiene el diff de archivos modificados pero no staged
DIFF=$(git diff)

# A√±ade contenido de archivos nuevos no a√±adidos (untracked)
UNTRACKED=$(git ls-files --others --exclude-standard)
for FILE in $UNTRACKED; do
    if [ -f "$FILE" ]; then
        CONTENT=$(cat "$FILE")
        DIFF="$DIFF"$'\n\n'"# Untracked file: $FILE"$'\n'"$CONTENT"
    fi
done

echo "üì¢ Analizando los cambios con GPT-4o-mini..."

# Construye el prompt para GPT-4o-mini usando stdin en lugar de --arg
PROMPT=$(jq -n '{
  model: "gpt-4o-mini",
  messages: [
    {
      role: "system",
      content: "Eres un desarrollador senior con experiencia en an√°lisis de c√≥digo y buenas pr√°cticas."
    },
    {
      role: "user",
      content: "Se te proporcionar√° un diff con los cambios recientes en un repositorio Git.\n\nTarea:\n1. Proporciona estrictamente un nombre para el commit que cumpla con las buenas pr√°cticas y sea descriptivo de los cambios, al mismo tiempo simple y corto.\n\nAqu√≠ est√° el diff:\n\n'"$(cat)"'\n\nBuenas pr√°cticas:\n- Nombre del commit en ingl√©s, con el siguiente prefijo seg√∫n el contexto:\n  - feat: Una nueva caracter√≠stica para el usuario.\n  - fix: Arregla un bug que afecta al usuario.\n  - perf: Cambios que mejoran el rendimiento del sitio.\n  - build: Cambios en el sistema de build, tareas de despliegue o instalaci√≥n.\n  - ci: Cambios en la integraci√≥n continua.\n  - docs: Cambios en la documentaci√≥n.\n  - refactor: Refactorizaci√≥n del c√≥digo como cambios de nombre de variables o funciones.\n  - style: Cambios de formato, tabulaciones, espacios o puntos y coma, etc; no afectan al usuario.\n  - test: A√±ade tests o refactoriza uno existente."
    }
  ],
  max_tokens: 50
}' <<< "$DIFF")

# Llamada a la API de OpenAI con curl
RESPONSE=$(curl -s https://api.openai.com/v1/chat/completions \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $OPENAI_API_KEY" \
  -d "$PROMPT")

# Verifica si la respuesta contiene un error
if [ -z "$RESPONSE" ] || [ "$RESPONSE" == "null" ] || echo "$RESPONSE" | jq -e '.error' &> /dev/null; then
    echo "‚ùå ERROR: La API de OpenAI devolvi√≥ una respuesta inv√°lida o un error."
    exit 1
fi

# Extrae el nombre del commit de la respuesta
CONTENT=$(echo "$RESPONSE" | jq -r '.choices[0].message.content')

# Verifica si el contenido es v√°lido antes de mostrarlo
if [ -z "$CONTENT" ] || [ "$CONTENT" == "null" ]; then
    echo "‚ùå ERROR: GPT-4o-mini devolvi√≥ una respuesta vac√≠a."
    exit 1
fi

# Muestra el resultado
echo -e "\n **Nombre del commit:**\n"
echo "$CONTENT" | \
  sed -E 's/^### (.*)/\n \1\n/' | \
  sed -E 's/^## (.*)/\n \1\n/' | \
  sed -E 's/^- (.*)/  ‚ûú \1/' | \
  sed -E 's/\*\*(.*)\*\*/\033[1m\1\033[0m/g'
